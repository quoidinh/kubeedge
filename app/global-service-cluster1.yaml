---
apiVersion: v1
kind: Service
metadata:
  name: global-service-base
  annotations:
    io.cilium/global-service: "true"
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    name: global-service-base
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: global-service-base
spec:
  selector:
    matchLabels:
      name: global-service-base
  replicas: 2
  template:
    metadata:
      labels:
        name: global-service-base
    spec:
      containers:
      - name: global-service-base
        image: docker.io/nginx:1.15.8
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
          - name: html
            mountPath: /usr/share/nginx/html/
        livenessProbe:
          httpGet:
            path: /
            port: 80
          periodSeconds: 1
        readinessProbe:
          httpGet:
            path: /
            port: 80
      volumes:
        - name: html
          configMap:
            name: nginx-base-response
            items:
              - key: message
                path: index.html
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-base-response
data:
  message: "{\"Galaxy\": \"Alderaan\", \"Cluster\": \"Cluster-2\"}\n"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-base
spec:
  selector:
    matchLabels:
      name: nginx-base
  replicas: 2
  template:
    metadata:
      labels:
        name: nginx-base
    spec:
      containers:
      - name: nginx-base-container
        image: docker.io/cilium/json-mock:1.2
        livenessProbe:
          exec:
            command:
            - curl
            - -sS
            - -o
            - /dev/null
            - localhost
        readinessProbe:
          exec:
            command:
            - curl
            - -sS
            - -o
            - /dev/null
            - localhost
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: global-service-base
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment     # Áp dụng HPA cho Deployment
    name: global-service-base
  minReplicas: 1   # Số pod scale nhỏ nhất
  maxReplicas: 10  # Số pod scale lớn nhất
  targetCPUUtilizationPercentage: 30
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 4
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 2
        periodSeconds: 60
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 60
# https://dev.to/xaviergeerinck/monitoring-the-kubernetes-nginx-ingress-controller-with-prometheus-and-grafana-35gi
# https://github.com/kubernetes/ingress-nginx/tree/main/deploy/prometheus
# https://gist.github.com/wu0407/ebea8c0ee9ecbc15e94b3122f1a193dc